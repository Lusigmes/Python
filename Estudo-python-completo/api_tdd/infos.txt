pip install poetry

poetry init
<escolher dependencias>
(
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = "^0.30.1"
pydantic = "^2.7.3"
pydantic-settings = "^2.3.2"
motor = "^3.4.0"
pre-commit = "^3.7.1"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
)

poetry install

criar pastas docs/imgs

# Construir configurações

criar pasta base(store, )
    criar __init__.py
    criar main.py -> PREENCHER

    criar pasta core
        criar __init__.py
        criar config.py -> PREENCHER

criar .env -> preencher com string de conexão do mongo

criar docker-compose.yml -> preencher com as configurações
    nano docker-compose.yml -> setar configuraç~oes

criar Makefile com :
    run:
	@uvicorn store.main:app --reload
docker-compose up -d -> iniciar docker // docker-compose down-> fechar docker
executar no terminal make run

adicionar em Makefile:
    precommit-install:
	    @poetry run pre-commit install
executar no terminal make pre-commit install

criar pasta tests na raiz
    criar pasta schemas na pasta tests
        criar arquivo test_product.py para testar o schema do produto
            preencher as funções de teste de acordo com o comportamento esperado

adicionar em Makefile:
    test:
	    @poetry run pytest
executar no terminal make test


criar pasta schemas na pasta store
    criar arquivo base.py e criar um schema base para os produtos(BaseSchemaMixin)

    criar arquivo product.py e preencher com os atributos do produto
    importar e herdar o schema base de BaseSchemaMixin

na pasta tests/schemas em test_product.py importar construtor do produto em product.py e realizar os testes criados em test_products.py
executar no terminal make test

criar aquivo factories.py ma pasta tests
    criar funções para retornar objetos
    mockados para realizar testes
